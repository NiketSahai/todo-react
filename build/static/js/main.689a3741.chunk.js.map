{"version":3,"sources":["Todo.jsx","firebase.jsx","App.js","reportWebVitals.js","index.js"],"names":["Todo","props","List","className","ListItem","ListItemAvatar","ListItemText","primary","text","secondary","i","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","App","useState","todos","setTodos","input","setInput","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","data","todo","FormControl","InputLabel","Input","value","onChange","event","target","Button","disabled","type","onClick","preventDefault","add","timestamp","FieldValue","serverTimestamp","variant","color","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRAwBeA,MAff,SAAcC,GACZ,OACE,cAACC,EAAA,EAAD,CAAMC,UAAU,aAAhB,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CACEC,QAASN,EAAMO,KACfC,UAAU,kBACLR,EAAMS,S,gBCONC,EAZKC,IAASC,cAAc,CACzCC,OAAQ,0CACRC,WAAY,uCACZC,UAAW,uBACXC,cAAe,mCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGMC,Y,MC2CRC,MAzDf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAwBA,OArBAC,qBAAU,WAERjB,EAAGkB,WAAW,SACXC,QAAQ,YAAa,QACrBC,YAAW,SAACC,GACXP,EAASO,EAASC,KAAKC,KAAI,SAACC,GAAD,OAASA,EAAIC,OAAOC,cAElD,IAeD,sBAAKlC,UAAU,MAAf,UACE,6CACA,iCACE,eAACmC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,2BACA,cAACC,EAAA,EAAD,CACEC,MAAOf,EACPgB,SAAU,SAACC,GAAD,OAAWhB,EAASgB,EAAMC,OAAOH,aAG/C,cAACI,EAAA,EAAD,CACEC,UAAWpB,EACXqB,KAAK,SACLC,QA1BQ,SAACL,GAEfA,EAAMM,iBAENtC,EAAGkB,WAAW,SAASqB,IAAI,CACzBb,KAAMX,EACNyB,UAAWvC,IAASS,UAAU+B,WAAWC,oBAG3C1B,EAAS,KAkBH2B,QAAQ,YACRC,MAAM,UALR,yBAWF,6BACG/B,EAAMU,KAAI,SAACG,EAAM3B,GAAP,OACT,cAAC,EAAD,CAAc8C,GAAI9C,EAAGF,KAAM6B,GAAhB3B,YC9CN+C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.689a3741.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Todo\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemAvatar,\r\n} from \"@material-ui/core\";\r\n\r\nfunction Todo(props) {\r\n  return (\r\n    <List className=\"todo__list\">\r\n      <ListItem>\r\n        <ListItemAvatar></ListItemAvatar>\r\n        <ListItemText\r\n          primary={props.text}\r\n          secondary=\"Dummy Deadline\"\r\n          key={props.i}\r\n        ></ListItemText>\r\n      </ListItem>\r\n    </List>\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n","// const firebaseConfig = {\r\n//     apiKey: \"AIzaSyCXFhjgrbVYjnbhzXo4LCyNtNdfXz2daFk\",\r\n//     authDomain: \"todo-app-react-936e3.firebaseapp.com\",\r\n//     projectId: \"todo-app-react-936e3\",\r\n//     storageBucket: \"todo-app-react-936e3.appspot.com\",\r\n//     messagingSenderId: \"118637715706\",\r\n//     appId: \"1:118637715706:web:ccfafd7f69b7f9eeef2943\",\r\n//     measurementId: \"G-F7KNLR6WBX\"\r\n//   };\r\n\r\nimport firebase from \"firebase\";\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: \"AIzaSyCXFhjgrbVYjnbhzXo4LCyNtNdfXz2daFk\",\r\n  authDomain: \"todo-app-react-936e3.firebaseapp.com\",\r\n  projectId: \"todo-app-react-936e3\",\r\n  storageBucket: \"todo-app-react-936e3.appspot.com\",\r\n  messagingSenderId: \"118637715706\",\r\n  appId: \"1:118637715706:web:ccfafd7f69b7f9eeef2943\",\r\n  measurementId: \"G-F7KNLR6WBX\",\r\n});\r\n\r\nconst db = firebaseApp.firestore();\r\n\r\nexport default db;\r\n","import react, { useEffect, useState } from \"react\";\nimport { Button, FormControl, Input, InputLabel } from \"@material-ui/core\";\nimport Todo from \"./Todo\";\nimport \"./App.css\";\nimport db from \"./firebase\";\nimport firebase from \"firebase\";\nimport \"firebase/firestore\";\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [input, setInput] = useState(\"\");\n\n  // when he app loads we need to add/remove new todos\n  useEffect(() => {\n    // this code fires up when app.js loads\n    db.collection(\"todos\")\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot((snapshot) => {\n        setTodos(snapshot.docs.map((doc) => doc.data().todo));\n      });\n  }, []);\n\n  const addTodo = (event) => {\n    // this will be fired when we add event\n    event.preventDefault(); // this will stop page refresh\n\n    db.collection(\"todos\").add({\n      todo: input,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n\n    setInput(\"\"); // clear the input\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Hello World</h1>\n      <form>\n        <FormControl>\n          <InputLabel>Write a todo</InputLabel>\n          <Input\n            value={input}\n            onChange={(event) => setInput(event.target.value)}\n          />\n        </FormControl>\n        <Button\n          disabled={!input}\n          type=\"submit\"\n          onClick={addTodo}\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Add Item\n        </Button>\n      </form>\n\n      <ul>\n        {todos.map((todo, i) => (\n          <Todo key={i} id={i} text={todo} />\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}